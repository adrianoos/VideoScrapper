{"version":3,"sources":["components/UseForm.jsx","components/ValidateInfo.js","components/InputForm.jsx","components/NavButtons.jsx","components/VideoWrapper.jsx","components/VideoPlayBack.jsx","components/VideoCard.jsx","components/ListItem.jsx","apis/YouTube.jsx","apis/Vimeo.jsx","components/Pagination.jsx","App.js","index.js"],"names":["useForm","ValidateInfo","urls","setUrls","useState","inpValue","setInpValue","errors","setErrors","UpdateInput","e","target","value","getUrl","ID","Date","now","date","toLocaleString","newItem","url","favs","preventDefault","storage","JSON","parse","window","localStorage","getItem","push","setItem","stringify","concat","values","UrlPatterns","some","el","includes","InputForm","Form","onSubmit","FormGroup","Jumbotron","style","background","className","Input","onChange","bsSize","width","id","placeholder","Row","sm","md","size","offset","Button","block","NavButtons","FavsToggle","FavsDisplay","SortbyDate","Sort","DeleteAll","ChangeDisplay","displayType","onClick","VideoWrapper","display","OnDelete","UpdateFavs","favsDisplay","console","log","ThumbNails","map","item","title","data","thumb","thumbnail","views","likes","VideoId","PlayBackId","ListItems","VideoPlayBack","props","buttonLabel","videoId","modal","setModal","toggle","videoSrcYT","videoSrcVimeo","src","minWidth","Modal","isOpen","ModalHeader","ModalBody","minHeight","frameBorder","height","ModalFooter","VideoCard","Card","body","inverse","backgroundColor","CardImg","top","alt","CardBody","CardTitle","tag","CardSubtitle","CardText","form","ListItem","Col","ListGroup","ListGroupItem","icon","youtubeIcon","data-icon","vimeoIcon","GetByIdYouTube","a","key","axios","get","response","resp2","mofifiedResponse","items","snippet","thumbnails","medium","statistics","likeCount","viewCount","GetByIdVimeo","headers","Authorization","name","pictures","sizes","link","metadata","connections","total","Pagination","videosPerPage","totalVideos","paginate","currentPage","pageNumbers","i","Math","ceil","Container","number","href","App","savedVideos","setDisplay","dispBackUp","setDispBackUp","setFavsDisplay","sort","setSort","setDisplayType","setCurrentPage","useEffect","FetchData","newArr","length","slice","search","FavoritesToggle","favsArr","filter","onConfirm","description","clear","onCancel","indexOfLastItem","indexOfFirstItem","currentItems","reverse","pageNumber","urlsList","clickedIndex","findIndex","newAr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2f383de.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst useForm = (ValidateInfo, urls, setUrls) =>{\r\nconst [inpValue, setInpValue ] = useState([])\r\nconst [errors, setErrors] = useState([])\r\n\r\n\r\nconst UpdateInput = e => {\r\n    setInpValue(e.target.value)\r\n};\r\n\r\nconst getUrl = (e) => {\r\n    const ID = Date.now()\r\n    const date = new Date(ID).toLocaleString()\r\n    const newItem = {url: inpValue, date: date, favs: false }\r\n    e.preventDefault()\r\n    setInpValue('')\r\n    setErrors(ValidateInfo(inpValue))\r\n    \r\nif (ValidateInfo(inpValue) === \"\"){\r\n        \r\nlet storage = JSON.parse(window.localStorage.getItem('urlsStore'))\r\nif (storage === null) {\r\nlet storage = []\r\nstorage.push(newItem)\r\nwindow.localStorage.setItem('urlsStore', JSON.stringify(storage))\r\n\r\n} else {\r\nstorage.push(newItem)\r\nwindow.localStorage.setItem('urlsStore', JSON.stringify(storage))\r\n}\r\n        \r\nsetUrls(urls.concat(newItem))\r\n\r\n }\r\n};\r\n\r\nreturn {UpdateInput, getUrl, inpValue, errors }\r\n\r\n}\r\n\r\n\r\nexport default useForm;","export default function ValidateInfo(values) {\r\n    let errors = {}\r\n        const UrlPatterns = [\"https://www.youtube.com/watch?v=\", \"https://vimeo.com/\", \"https://youtu.be/\"]\r\n        const badUrl = () => (errors = \"Sorry incorrect URL\")\r\n        const urlOk = () => (errors = \"\")\r\n        !UrlPatterns.some(el => values.includes(el)) && badUrl()\r\n         UrlPatterns.some(el => values.includes(el)) && urlOk()\r\n\r\n return errors\r\n};\r\n","import React from 'react';\r\nimport { Button, Form, FormGroup, Input, Jumbotron, Row,Col } from 'reactstrap';\r\nimport useForm from './UseForm'\r\nimport ValidateInfo from './ValidateInfo'\r\n\r\nconst InputForm = ({ urls, setUrls }) => {\r\n    const { UpdateInput, getUrl, inpValue, errors } = useForm(ValidateInfo, urls, setUrls) // custom hook \r\n    return (\r\n <div>\r\n    <Form onSubmit={getUrl}>\r\n     <FormGroup>\r\n      <Jumbotron style={{background:'rgb(141, 141, 141)'}}>\r\n        <h1 className=\"display-4\">Vimeo and YouTube Scrapper</h1>\r\n        <hr className=\"my-2\" />\r\n        <p className=\"lead\">Place where You can store your favorites videos</p>\r\n      </Jumbotron>\r\n          <Input  value={inpValue} onChange={UpdateInput} bsSize=\"lg\" width=\"100%\" id=\"urlInput\" placeholder=\"Enter YT or Vimeo url\">\r\n          </Input>\r\n             {errors && <h2>{errors}</h2>}\r\n     </FormGroup>\r\n     <Row >\r\n     <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n     <Button className='m-2' size=\"sm\" block>Add</Button>\r\n     </Col>\r\n        \r\n        </Row>\r\n    </Form>\r\n    \r\n </div>\r\n    );\r\n  }\r\n  \r\n  export default InputForm;\r\n  \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Row, Col, Button } from 'reactstrap';\r\n\r\nconst NavButtons = ({ FavsToggle, FavsDisplay, SortbyDate, Sort, DeleteAll, ChangeDisplay, displayType }) => {\r\n\r\n    return (\r\n   <div className=\"NavButtons\">\r\n     \r\n      <Row>\r\n        <Col>\r\n        { FavsDisplay ? <Button className='ml-1' style={{background: 'lightblue'}} onClick={() => FavsToggle()}>Favorites</Button> :\r\n         <Button className='m-1' onClick={() => FavsToggle()}>Favorites</Button>\r\n        }\r\n        {\r\n          Sort ? <Button className='m-1' style={{background: 'lightblue'}} onClick={() => SortbyDate()}>Newest</Button> : \r\n          <Button className='m-1' onClick={() => SortbyDate()}>Oldest</Button>\r\n        }      \r\n        <Button className='m-1' onClick={() => DeleteAll()}>Delete All</Button>\r\n        {\r\n          displayType ? <Button className='m-1' style={{background: 'lightblue'}}  onClick={() => ChangeDisplay()}>Display: List</Button> :\r\n          <Button className='m-1' onClick={() => ChangeDisplay()}>Display: ThumbNails</Button>\r\n        }\r\n        </Col>\r\n      </Row>\r\n      \r\n   </div>\r\n    );\r\n  }\r\n  \r\n  export default NavButtons;\r\n  \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { VideoCard } from './'\r\nimport { ListItem } from './'\r\n\r\nconst VideoWrapper = ({display, OnDelete, UpdateFavs, favsDisplay, displayType}) => {\r\nconsole.log(display)\r\n    const ThumbNails = display.map((item) => \r\n        <VideoCard\r\n        key={item.date}\r\n        date={item.date}\r\n        title={ item.data ? item.data.title : ''}\r\n        thumb={item.data ? item.data.thumbnail : 'https://via.placeholder.com/320x180?text=Incorrect ID'} \r\n        views={item.data ? item.data.views : ''}\r\n        likes={item.data ? item.data.likes : ''}\r\n        VideoId={item.data ? '' : item.ID}\r\n        PlayBackId={item.ID}\r\n        favs={item.favs}\r\n        OnDelete={OnDelete}\r\n        UpdateFavs={UpdateFavs}\r\n        favsDisplay={favsDisplay}\r\n        url={item.url}\r\n        />)\r\n\r\n      const ListItems = display.map((item) => \r\n      <ListItem\r\n      data={item.data}\r\n      key={item.date}\r\n      date={item.date}\r\n      title={ item.data ? item.data.title : ''}\r\n      thumb={item.data ? item.data.thumbnail : 'https://via.placeholder.com/320x180?text=Incorrect ID'} \r\n      views={item.data ? item.data.views : ''}\r\n      likes={item.data ? item.data.likes : ''}\r\n      VideoId={item.data ? '' : item.ID}\r\n      favs={item.favs}\r\n      OnDelete={OnDelete}\r\n      UpdateFavs={UpdateFavs}\r\n      favsDisplay={favsDisplay}\r\n      PlayBackId={item.ID}\r\n      url={item.url}\r\n      />\r\n      )\r\n      \r\n\r\n    return (\r\n   <div className=\"VideoWrapper\">\r\n       <Col>\r\n       <Row className=\"d-flex justify-content-center\">\r\n       {displayType ? ListItems : ThumbNails }\r\n       </Row>\r\n       </Col>\r\n   \r\n   </div>\r\n    );\r\n  }\r\n  \r\n  export default VideoWrapper;\r\n  \r\n","import React, { useState } from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalFooter, ModalBody} from 'reactstrap';\r\n\r\nconst VideoPlayBack = (props) => {\r\n     const {\r\n          buttonLabel,\r\n          className,\r\n          videoId, \r\n          url\r\n       } = props;\r\n      \r\n        const [modal, setModal] = useState(false);\r\n        const toggle = () => setModal(!modal);\r\n        const videoSrcYT = `https://www.youtube.com/embed/${videoId}`;\r\n        const videoSrcVimeo = `https://player.vimeo.com/video/${videoId}`\r\n        let src =''\r\n        { url.includes('youtu') ? src=videoSrcYT : src=videoSrcVimeo}\r\n      \r\n        return (\r\n         <div className={className}>\r\n            <Button style={{minWidth:'6vw'}} onClick={toggle}>{buttonLabel}</Button>\r\n            <Modal isOpen={modal} toggle={toggle} style={{minWidth: '80vw'}}>\r\n              <ModalHeader toggle={toggle}></ModalHeader>\r\n              <ModalBody style={{minHeight: '80vh'}}>\r\n              <iframe\r\n                 frameBorder=\"0\"\r\n                 height=\"550vh\"\r\n                 width=\"100%\"\r\n                 title=\"Video Player\"\r\n                 src={src}\r\n              />\r\n              </ModalBody>\r\n              <ModalFooter>\r\n              </ModalFooter>\r\n            </Modal>\r\n            </div>\r\n           \r\n        );\r\n      }\r\n      \r\n  \r\n  export default VideoPlayBack;\r\n\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Col, Row } from 'reactstrap';\r\nimport VideoPlayBack from './VideoPlayBack'\r\n\r\nconst VideoCard = ({title, thumb, views, favs, likes, OnDelete, date, VideoId, UpdateFavs, PlayBackId, url}) => {\r\n   \r\n  \r\n\r\n    return (\r\n   <div className=\"VideoCard\">\r\n        <Card className=\"d-flex bd-highlight\" body inverse style={{ backgroundColor: '#333', height:'100%'}}>\r\n          <CardImg className=\"m-1 flex-grow-1 bd-highlight\" top width=\"100%\" src={thumb} alt=\"Card image cap\"/>\r\n            <CardBody className=\"m-1 bd-highlight\" >\r\n               {title ? <CardTitle tag=\"h6\">TITLE: {title}</CardTitle> : ''}\r\n               {views ? <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Views: {views}</CardSubtitle> : ''} \r\n               { likes ? <CardText>Likes: {likes}</CardText> : ''}\r\n               { VideoId ? <CardText>Sorry video id: <strong>\"{VideoId}\"</strong> is incorrect</CardText> : '' }\r\n               { date ? <CardText>Added: {date}</CardText> : '' }\r\n            </CardBody>\r\n              <Row form>\r\n                <Col>\r\n                { likes ?  <VideoPlayBack buttonLabel={'Play'} videoId={PlayBackId} url={url}/> : ''}\r\n               </Col>\r\n                {likes ?\r\n               <Col>\r\n               { favs ? <Button style={{background:'lightblue'}} onClick={() => UpdateFavs(date)}>Favorites</Button> :\r\n               <Button onClick={() => UpdateFavs(date)}>Favorites</Button>}\r\n               </Col> : ''}\r\n               <Col>\r\n               { likes ? <Button onClick={() => OnDelete(date)}>Delete</Button> :\r\n               <Button style={{backgroundColor: 'red'}} onClick={() => OnDelete(date)}>Delete</Button>}\r\n               </Col>\r\n              </Row>\r\n            </Card> \r\n   </div>\r\n    );\r\n  }\r\n  \r\n  export default VideoCard;\r\n\r\n","import React from 'react';\r\nimport VideoPlayBack from './VideoPlayBack'\r\nimport { Button, ListGroup, ListGroupItem, Row} from 'reactstrap';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport vimeoIcon from '@iconify-icons/logos/vimeo-icon';\r\nimport youtubeIcon from '@iconify-icons/logos/youtube-icon';\r\n\r\n\r\nconst ListItem = ({title, favs, UpdateFavs, date, likes, OnDelete, PlayBackId, url, data, Col}) => {\r\n    return (\r\n   <div>\r\n    <ListGroup>\r\n      <ListGroupItem className=\"d-flex bd-highlight\" style={{background: 'darkgrey', minWidth:'80vw'}}>\r\n   { title ? <VideoPlayBack buttonLabel={title} className='flex-grow-1 bd-highlight' videoId={PlayBackId} url={url}/> :\r\n   <Button style={{width: '60vw'}}className=\"m-1 bd-highlight\">Incorect Video ID</Button>}\r\n      { data ?\r\n      <Row>\r\n      { url.includes('youtu') ? <Icon icon={youtubeIcon} data-icon=\"line-md:image-twotone\"/> : <Icon icon={vimeoIcon} /> }\r\n      </Row> : ''\r\n       }\r\n      \r\n      { data ? <span>\r\n        {favs ? <Button className=\"p-2 m-1 bd-highlight\" style={{background:'lightblue'}} onClick={() => UpdateFavs(date)}>Favorites</Button> :\r\n      <Button className=\"p-2 m-1 bd-highlight\" onClick={() => UpdateFavs(date)}>Favorites</Button>}\r\n      </span> : '' }\r\n      \r\n    \r\n      \r\n\r\n\r\n\r\n       { likes ? <Button className=\"p-2 m-1 bd-highlight\" onClick={() => OnDelete(date)}>Delete</Button> :\r\n                 <Button className=\"p-2 m-1 bd-highlight\" style={{backgroundColor: 'red'}} onClick={() => OnDelete(date)}>Delete</Button>}\r\n    \r\n         </ListGroupItem>\r\n      </ListGroup>\r\n   </div>\r\n    );\r\n  }\r\n  \r\n  export default ListItem;\r\n\r\n//className=\"p-2 m-1 flex-grow-1 bd-highlight\"","import axios from 'axios';\r\n\r\nconst GetByIdYouTube = async (ID) => {\r\n    try {\r\nconst key = \"AIzaSyC6crZwFj1dv0BJOd0JjoyZA0Amqtl8R7o\"\r\nconst response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${ID}&key=${key}`)\r\nconst resp2 = await axios.get(`https://www.googleapis.com/youtube/v3/videos?part=statistics&id=${ID}&key=${key}`)\r\nconst mofifiedResponse = {\r\n    title: response.data.items[0].snippet.title,\r\n    thumbnail:response.data.items[0].snippet.thumbnails.medium.url,\r\n    likes: resp2.data.items[0].statistics.likeCount,\r\n    views: resp2.data.items[0].statistics.viewCount\r\n}\r\nreturn mofifiedResponse\r\n\r\n} catch (error) {\r\n    if (error) {\r\n        return\r\n    }\r\n}\r\n};\r\n\r\nexport default GetByIdYouTube\r\n\r\n","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetByIdVimeo = async (ID) => {\r\n   try {\r\n    \r\n    const Token = '3a3bdb617776994351b4ee7f79a99557'\r\n    const response = await axios.get(`https://api.vimeo.com/videos/${ID}`, {\r\n       headers: {\r\n       Authorization: `Bearer ${Token}`,\r\n        },\r\n       }\r\n      )\r\n   \r\n     const mofifiedResponse = {\r\n       title: response.data.name,\r\n       thumbnail:response.data.pictures.sizes[2].link,\r\n       likes: response.data.metadata.connections.likes.total,\r\n       views: ''\r\n     };\r\n     \r\n    return mofifiedResponse;\r\n     \r\n   } catch (error) {\r\n     console.log(error)\r\n   }\r\n};\r\n\r\n\r\nexport default GetByIdVimeo\r\n"," import React from 'react'\r\n import { Container, Button} from 'reactstrap';\r\n \r\n export const Pagination = ({ videosPerPage, totalVideos, paginate, currentPage }) => {\r\n     const pageNumbers = []\r\nconsole.log(currentPage)\r\n     for (let i = 1; i <= Math.ceil(totalVideos / videosPerPage); i++) {\r\n         pageNumbers.push(i)\r\n     }\r\n     return (\r\n         \r\n            <Container>\r\n                 {pageNumbers.map( number => (\r\n                     <span>\r\n                         { currentPage === number ? <Button className='m-2' style={{background: 'lightblue'}} key={number} onClick={()=> paginate(number)} href='!#'>\r\n                       {number} \r\n                     </Button> : \r\n                     <Button className='m-2' key={number} onClick={()=> paginate(number)} href='!#'>\r\n                     {number} \r\n                   </Button>\r\n                     }\r\n                     \r\n                     </span>\r\n                 ))}\r\n             </Container>\r\n     \r\n     )\r\n };\r\n\r\n \r\n\r\n \r\n \r\n","import React, { useState, useEffect } from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport { onConfirm } from 'react-confirm-pro';\nimport './App.css';\nimport { InputForm, NavButtons, VideoWrapper } from './components'\nimport { GetByIdYouTube } from './apis'\nimport { GetByIdVimeo } from './apis'\nimport { Pagination } from './components/Pagination'\n\nconst App = () => {\nconst savedVideos = JSON.parse(localStorage.getItem('urlsStore'))\n\n  const [urls , setUrls ] = useState(savedVideos || [])\n  const [display, setDisplay] = useState([])\n  const [dispBackUp, setDispBackUp] = useState([])\n  const [favsDisplay, setFavsDisplay ] = useState(false)\n  const [sort, setSort] = useState(false)\n  const [displayType, setDisplayType] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [videosPerPage] = useState(6)\n \n\nuseEffect(() => {\n  FetchData(urls)\n }, [urls])\n\n const FetchData = async (urls) =>{\n   const newArr = []\n\n  for (const item of urls) {\n     \n       const url = item.url\n       let ID =''\n       let response = ''\n       let favs = item.favs\n\n      if (url.includes(\"youtu\") && url.length > 30) {\n        ID = url.slice(url.search(\"=\", 0) + 1, url.length);\n        response = GetByIdYouTube(ID);\n\n       } else if (url.includes(\"youtu\") && url.length < 30) {\n         ID = url.slice(url.search(\".be\", 0) + 4, url.length)\n         response = GetByIdYouTube(ID);\n\n       } else if (url.includes(\"vimeo\",0)) {\n        ID = url.slice(url.search(\"com\", 0) + 4, url.length)\n        response = GetByIdVimeo(ID);\n       }\n       const data = await response;\n       const date = item.date;\n       const newItem = { data, url, date, ID, favs }\n      \n     newArr.push(newItem)\n       \n}\nsetDisplay(newArr)\n};\n\nconst DeleteFromList = (date) =>{\n const urlsList = urls.filter(el => el.date !== date)\n setUrls(urlsList)\n localStorage.clear()\n window.localStorage.setItem('urlsStore', JSON.stringify(urlsList))\n};\n\nconst UpdateFavs = (date) =>{\n  const clickedIndex = urls.findIndex((el) => (el.date === date))\n  let newAr = [...urls]\n  newAr[clickedIndex] = {...newAr[clickedIndex], favs: !newAr[clickedIndex].favs}\n\n  setUrls(newAr)\n  localStorage.clear()\n  window.localStorage.setItem('urlsStore', JSON.stringify(newAr))\n};\n\nconst FavoritesToggle = () =>{\n  setFavsDisplay(!favsDisplay)\nconst favsArr = display.filter( item => item.favs === true)\nsetDispBackUp(display)\n favsDisplay ? setDisplay(dispBackUp) : setDisplay(favsArr)\n};\n\nconst SortbyDate = () =>{\n  setSort(!sort)\n  display.reverse()\n}\n\nconst DeleteAll = async () =>{\n  onConfirm({\n    title: (\n      <h3>\n        Are you sure?\n      </h3>\n    ),\n    description: (\n      <p>This process cannot be undone.</p>\n    ),\n    onSubmit: () => {\n      localStorage.clear()\n  setUrls([])\n  setDisplay([])\n    },\n    onCancel: () => {\n    },\n  })\n};\n\nconst ChangeDisplay= () =>{\nsetDisplayType(!displayType)\n};\n\nconst indexOfLastItem = currentPage * videosPerPage;\nconst indexOfFirstItem = indexOfLastItem - videosPerPage;\nconst currentItems = display.slice(indexOfFirstItem, indexOfLastItem)\n\nconst paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n// do wrappera przekaż tylko wycinek daty\n\n  return (\n   \n      <Container>\n      <Col>\n          <Col>\n            <InputForm urls={urls} setUrls={setUrls}/>\n          </Col>\n            <Row >\n              <Col>\n                <NavButtons \n                  FavsToggle={FavoritesToggle}\n                  FavsDisplay={favsDisplay}\n                  SortbyDate={SortbyDate}\n                  Sort={sort}\n                  DeleteAll={DeleteAll}\n                  ChangeDisplay={ChangeDisplay}\n                  displayType={displayType}\n                />\n              </Col>\n              <Pagination videosPerPage={videosPerPage} totalVideos={display.length} paginate={paginate} currentPage={currentPage}/>\n            </Row>\n         <VideoWrapper \n          display={currentItems}\n          displayType={displayType}\n          OnDelete={DeleteFromList}\n          UpdateFavs={UpdateFavs}\n          favsDisplay={FavoritesToggle}\n         />\n        \n      </Col>\n      </Container>\n      \n      \n     \n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}